import pandas as pd
from collections import defaultdict
from pathlib import Path

# === Paths ===
tsv_path = "/home/yuqi/joe_program/TF_PWM_chart_3.tsv"
log_path = "/home/yuqi/joe_program/pwm_execution_af3_all.log"
output_path = "/home/yuqi/joe_program/TF_PWM_chart_4.tsv"

# === Read TSV ===
df = pd.read_csv(tsv_path, sep="\t")

# Ensure the exact column name (leading space) exists
if " AlphaFold" not in df.columns:
    df[" AlphaFold"] = ""
else:
    df[" AlphaFold"] = df[" AlphaFold"].fillna("").astype(str)

# === Parse the log (collect ALL DONEs per sequence) ===
log_dict = defaultdict(list)

with open(log_path, "r") as f:
    for raw in f:
        line = raw.strip()
        if not line or line.startswith("#"):
            continue

        parts = line.split("\t")
        if len(parts) < 2:
            continue

        filename, status = parts[0], parts[1]
        # accept "DONE" or "DONE." variants
        if not status.startswith("DONE"):
            continue

        base = Path(filename).name
        seq_key = base.split(".")[0].lower()  # e.g., "a0a087wx29"

        # de-dup while preserving order
        if base not in log_dict[seq_key]:
            log_dict[seq_key].append(base)

# === Map TF_name -> joined AF3 filenames ===
def join_af3(tf_name):
    if not isinstance(tf_name, str):
        return ""
    key = tf_name.strip().lower()
    items = log_dict.get(key, [])
    return ";".join(items) if items else ""

df[" AlphaFold"] = df["TF_name"].map(join_af3)

# === Save ===
df.to_csv(output_path, sep="\t", index=False)
print(f" AlphaFold column updated with ALL DONE entries and saved to {output_path}")
